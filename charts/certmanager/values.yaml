# -- Dictionary of the global settings to configure this chart
# @default -- depends on the individual settings
global:

installerType: "argocd"

# -- String the channel to install cert-manager from (Defaults to "stable-v1")
operatorChannel: "stable-v1"

certmgrOperator:

  # -- List of DNS server (ip:port strings) to be used when doing DNS01 challenges (Defaults to [8.8.8.8:53, 1.1.1.1:53])
  # These are necessary for DNS01 ACME solver which needs outside DNS
  # servers and won't really work with openshift's internal split-view DNS servers
  # [https://cert-manager.io/docs/configuration/acme/dns01/#setting-nameservers-for-dns01-self-check](https://cert-manager.io/docs/configuration/acme/dns01/#setting-nameservers-for-dns01-self-check)
  nameservers:
    - 8.8.8.8:53
    - 1.1.1.1:53

  # -- Arguments to pass to the cert-manager controller (optional)
  # Example:
  # additionalArgs:
  #   - "--acme-http01-solver-nameservers=8.8.8.8:53,1.1.1.1:53"
  #   - "--v=2"
  additionalArgs: []

  # -- Issuers to use for the cert-manager (optional)
  # You can specify multiple issuers for different challenges.
  issuers: []
    # -- ACME settings
    # - acme:
    #     -- Email to use for ACME account
    #     email: "user@example.com"
    #     -- Secret resource to store ACME account's private key
    #     privateKeySecretRef:
    #       name: "acme-account-key"
    #     -- ACME server to use
    #     Examples:
    #     - https://acme-staging-v02.api.letsencrypt.org/directory
    #     - https://acme-v02.api.letsencrypt.org/directory
    #     server: "https://acme-staging-v02.api.letsencrypt.org/directory"
    #     -- ACME solvers to use (optional)
    #     You can specify multiple solvers for different challenges.
    #     solvers: []
    #       Examples:
    #       - dns01:
    #         -- AWS Route53 example
    #         route53:
    #           region: "us-east-1"
    #           accessKeyIDSecretRef:
    #             name: "aws-credentials"
    #             key: aws_access_key_id
    #           secretAccessKeySecretRef:
    #             name: aws-credentials
    #             key: aws_secret_access_key
    #           hostedZoneID: "hosted-zone-id"
    #         -- Azure example
    #         azureDNS:
    #           resourceGroupName: "my-resource-group"
    #           subscriptionID: "my-subscription-id"
    #           hostedZoneName: "my-hosted-zone-name"
    #           environment: "AzurePublicCloud"
    #           managedIdentity:
    #             clientID: "my-client-id"
    #         -- GCP example
    #         cloudDNS:
    #           project: "my-project"
    #           serviceAccountSecretRef:
    #             name: "my-service-account"
    #             key: "my-key"
    #         -- Cloudflare example
    #         cloudflare:
    #           apiTokenSecretRef:
    #             name: "my-api-key"
    #             key: "my-key"


  # -- Cloud credentials to use for the cert-manager (optional)
  # You can specify multiple cloud credentials for different cloud providers.
  # The cloud credentials will be used in combination with the solvers to create the DNS records.
  credentialsRequests: []
  # -- AWS example
  # - name: aws
  #   secretRef:
  #     name: "aws-credentials"
  #     namespace: "cert-manager"
  #   providerSpec:
  #     apiVersion: cloudcredential.openshift.io/v1
  #     kind: "AWSProviderSpec"
  #     statementEntries:
  #     - effect: Allow
  #       action:
  #         - route53:GetChange
  #       resource: "arn:aws:route53:::change/*"
  #     - effect: Allow
  #       action:
  #         - route53:ChangeResourceRecordSets
  #         - route53:ListResourceRecordSets
  #       resource: "arn:aws:route53:::hostedzone/*"
  #     -- Can be removed if you specify the (optional) hostedZoneID.
  #     - effect: Allow
  #       action:
  #         - route53:ListHostedZones
  #       resource: "*"
  # -- Azure example
  # - name: azure
  #   secretRef:
  #     name: "azure-credentials"
  #     namespace: "cert-manager"
  #   providerSpec:
  #     apiVersion: cloudcredential.openshift.io/v1
  #     kind: "AzureProviderSpec"
  #     roleBindings:
  #       - role: "DNS Zone Contributor"
  # -- GCP example
  # - name: gcp
  #   secretRef:
  #     name: "gcp-credentials"
  #     namespace: "cert-manager"
  #   providerSpec:
  #     apiVersion: cloudcredential.openshift.io/v1
  #     kind: "GCPProviderSpec"
  #     predefinedRoles:
  #       - "roles/dns.admin"
  #     gcpServiceAccount: "cert-manager-clusterName-dns"